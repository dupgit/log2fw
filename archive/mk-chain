#! /bin/bash

Chain=
Spool=/var/lib/auth-monitor
Action=DROP

FName=auth-monitor.txt

Doit=0
Echo=echo

function Usage
{
  App=$(basename $0)
  cat <<TXT

  $App --spool=x --chain=y --action=z --fname=file,file,...

TXT
  echo "    $*"
  return 0
}

function GetParam
{
  echo $* | awk -F= '{print $2}'
}

for arg in $*
do
  case $arg in
    --spool=*)
      Spool=$(GetParam $arg)
      ;;
    --chain=*)
      Chain=$(GetParam $arg)
      ;;
    --action=*)
      Action=$(GetParam $arg)
      ;;
    --fname=*)
      FName=$(GetParam $arg)
      ;;
    --do|-y)
      Doit=1
      Echo=
      ;;
    *)
      Usage
      exit 0
      ;;
  esac
done

#$Echo "# Chain  : $Chain"
#$Echo "# Spool  : $Spool"
#$Echo "# FName  : $FName"

if [ -z "$Chain" ]
then
  Usage "Chain is empty"
  exit 1
fi
if [ -z "$Spool" ]
then
  Usage "Spool is empty"
  exit 1
fi
if [ -z "$FName" ]
then
  Usage "FName is empty"
  exit 1
fi


$Echo iptables -F $Chain

#
# Let's collect all bad guys
Addr=
for f in $(echo $FName | sed -e "s/,/ /g")
do
  FileIn="$Spool/$f"
  #echo "# Handling $f"
  tBad=$(grep ^listed $FileIn | grep  " 1 " | awk '{print $3}')
  Addr="$Addr $tBad"
done
# removing repeated addresses
BadIP=$(echo $Addr | sed -e "s/ /\n/g" | sort -u)

# and let's block them
declare -i nAddr
for ip in $BadIP
do
  $Echo iptables -A $Chain -p tcp -s $ip -j DROP
  nAddr=$nAddr+1
done

Date=$(date +"%b %d %H:%M:%S")

msg="$Date $App Number of bad clients on chain $Chain : $nAddr"

msg="iptables update : $nAddr bad clients on chain $Chain"
/usr/bin/logger -p local2.info -t mk-chain -i "$msg"
